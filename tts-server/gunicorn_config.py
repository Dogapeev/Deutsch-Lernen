# gunicorn_config.py
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Gunicorn —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º monkey patching

# –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –í—ã–ø–æ–ª–Ω—è–µ–º monkey patching –î–û –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
from gevent import monkey
monkey.patch_all()

import os

# === –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Gunicorn (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏) ===
# Worker class –¥–ª—è gevent
worker_class = 'gevent'

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ worker –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (–∫–∞–∫ —É –≤–∞—Å –±—ã–ª–æ)
workers = 4

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –Ω–∞ worker
worker_connections = 1000

# Bind –∞–¥—Ä–µ—Å - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é $PORT –∫–∞–∫ —É –≤–∞—Å –±—ã–ª–æ
bind = f"0.0.0.0:{os.getenv('PORT', 10000)}"

# === Timeout –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ===
# –¢–∞–π–º–∞—É—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ (–≤–∞–∂–Ω–æ –¥–ª—è TTS –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏)
timeout = 120

# –¢–∞–π–º–∞—É—Ç –¥–ª—è keep-alive —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
keepalive = 2

# === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
# –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
loglevel = 'info'

# –§–æ—Ä–º–∞—Ç –ª–æ–≥–∞ –¥–æ—Å—Ç—É–ø–∞
access_log_format = '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %(D)s'

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ –¥–æ—Å—Ç—É–ø–∞
accesslog = '-'  # stdout

# –õ–æ–≥–∏ –æ—à–∏–±–æ–∫
errorlog = '-'   # stderr

# === Performance –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ===
# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ worker (–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏)
max_requests = 1000
max_requests_jitter = 100

# Preload –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏
preload_app = True

# === Graceful shutdown ===
# –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è graceful shutdown
graceful_timeout = 30

# === –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ===
# –û—Ç–∫–ª—é—á–∞–µ–º Server header –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
proc_name = 'tts-server'

# === –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è lifecycle events ===
def on_starting(server):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Gunicorn"""
    server.log.info("üöÄ Starting TTS Server with gevent monkey patching")

def on_reload(server):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ reload"""
    server.log.info("üîÑ Reloading TTS Server")

def worker_int(worker):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ SIGINT worker'–æ–º"""
    worker.log.info("üõë Worker received SIGINT")

def when_ready(server):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    server.log.info("‚úÖ TTS Server is ready to accept connections")
    server.log.info(f"üì° Listening on {bind}")
    server.log.info(f"üë• Workers: {workers}")
    server.log.info(f"üîß Worker class: {worker_class}")

# === Monkey patching –ø—Ä–æ–≤–µ—Ä–∫–∞ ===
def post_fork(server, worker):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ fork worker –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    import ssl
    import socket
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ monkey patching —Å—Ä–∞–±–æ—Ç–∞–ª
    if hasattr(socket.socket, '_gevent_sock_class'):
        worker.log.info("‚úÖ Gevent monkey patching successful")
    else:
        worker.log.warning("‚ö†Ô∏è Gevent monkey patching may have failed")
    
    worker.log.info(f"üîß Worker {worker.pid} started")